#这是一个服务端口号
server:
  port: 8001

#服务的名称
spring:
  #入住EureKa的名字
  application:
    name: cloud-payment-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver              # mysql驱动包 com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root


eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #注册的地址
      defaultZone: http://localhost:7001/eureka #单机版
      #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  # 集群版
  #注册进去的状态名字是什么（同时也可以理解成是一个端口号，因为这个端口号可以在应用名字一样的状况下有多个，
  #下用户去访问的时候，就可以按照应用的名字去访问下面的端口号（按照一定的算法））
  instance:
    instance-id: payment8001
    prefer-ip-address: true     #访问路径可以显示IP地址
      #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)，但是这种状态一般不修改
    #lease-renewal-interval-in-seconds: 1
      #Eureka服务端在收到最后一次心跳后等待时间上限，
      #就是，客服端向服务端，发起联系的时候，服务端
      #没有向客户端提交联系，然后过了一段时间之后，单位为秒(默认是90秒)，超时将剔除服务
    #lease-expiration-duration-in-seconds: 2




mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.sias.springcloud.entities    # 所有Entity别名类所在包

